window.eoxiaJS.taskManager = {};
window.eoxiaJS.taskManagerFrontend = {};

window.eoxiaJS.taskManagerFrontend.comment = {};

window.eoxiaJS.taskManagerFrontend.comment.init = function() {
	window.eoxiaJS.taskManagerFrontend.comment.event();
};

window.eoxiaJS.taskManagerFrontend.comment.event = function() {
	jQuery( document ).on( 'blur keyup paste keydown click', '.comment .content', window.eoxiaJS.taskManagerFrontend.comment.updateHiddenInput );
};

window.eoxiaJS.taskManagerFrontend.comment.beforeLoadComment = function( triggeredElement, response ) {
	if ( ! triggeredElement.closest( 'div.point' ).find( '.comments' ).is( ':visible' ) ) {
		jQuery( 'div.point .comments:visible' ).slideUp();
	}

	if ( triggeredElement.closest( 'div.point' ).find( '.comments' ).is( ':visible'  ) ) {
		triggeredElement.closest( '.point' ).find( '.wpeo-point-summary .fa' ).toggleClass( 'fa-angle-down fa-angle-right' );
		triggeredElement.closest( 'div.point' ).find( '.comments' ).slideUp();

		return false;
	}

	jQuery( '.wpeo-project-task .point .wpeo-point-summary .fa.fa-angle-down' ).toggleClass( 'fa-angle-right fa-angle-down' );

	return true;
};

window.eoxiaJS.taskManagerFrontend.comment.loadedFrontComments = function( triggeredElement, response ) {
	triggeredElement.closest( '.point' ).find( '.wpeo-point-summary .fa' ).toggleClass( 'fa-angle-right fa-angle-down' );
	triggeredElement.closest( '.point' ).find( '.comments' ).html( response.data.view );
	triggeredElement.closest( 'div.point' ).find( '.comments' ).slideDown();
};

window.eoxiaJS.taskManagerFrontend.comment.addedCommentSuccess = function( triggeredElement, response ) {
	var currentNumberComment = parseInt( triggeredElement.closest( '.point' ).find( '.wpeo-point-comment span:last' ).text() );
	currentNumberComment++;

	triggeredElement.closest( '.wpeo-comment-container' ).find( 'input[name="content"]' ).val( '' );
	triggeredElement.closest( '.wpeo-comment-container' ).find( '.content' ).html( '' );
	triggeredElement.closest( '.comments .comment.new' ).after( response.data.view );
	triggeredElement.closest( '.comment' ).find( '.wpeo-point-new-placeholder' ).removeClass( 'hidden' );
	triggeredElement.closest( '.point' ).find( '.wpeo-point-comment span:last' ).text( currentNumberComment );
};

/**
 * Met à jour le champ caché contenant le texte du comment écris dans la div "contenteditable".
 *
 * @param  {MouseEvent} event L'évènement de la souris lors de l'action.
 * @return {void}
 *
 * @since 1.0.0.0
 * @version 1.3.6.0
 */
window.eoxiaJS.taskManagerFrontend.comment.updateHiddenInput = function( event ) {
	if ( 0 < jQuery( this ).text().length ) {
		jQuery( this ).closest( '.comment' ).find( '.wpeo-point-new-btn' ).css( 'opacity', 1 );
		jQuery( this ).closest( '.comment' ).find( '.wpeo-point-new-placeholder' ).addClass( 'hidden' );
	} else {
		jQuery( this ).closest( '.comment' ).find( '.wpeo-point-new-btn' ).css( 'opacity', 0.4 );
		jQuery( this ).closest( '.comment' ).find( '.wpeo-point-new-placeholder' ).removeClass( 'hidden' );
	}

	jQuery( this ).closest( '.comment' ).find( '.wpeo-comment-content input[name="content"]' ).val( jQuery( this ).html() );
};

window.eoxiaJS.taskManagerFrontend.point = {};

window.eoxiaJS.taskManagerFrontend.point.init = function() {
	window.eoxiaJS.taskManagerFrontend.point.event();
};

window.eoxiaJS.taskManagerFrontend.point.event = function() {
	jQuery( document ).on( 'click', '.wpeo-task-point-use-toggle', window.eoxiaJS.taskManagerFrontend.point.togglePoint );
	jQuery( document ).on( 'click', '.wpeo-task-point-use-toggle .points.completed', function( e ) { event.preventDefault(); return false; } );
	jQuery( document ).on( 'click', '.point-content', window.eoxiaJS.taskManagerFrontend.point.setPointActive );
};

window.eoxiaJS.taskManagerFrontend.point.togglePoint = function( event ) {
	event.preventDefault();
	jQuery( this ).find( '.wpeo-point-toggle-arrow' ).toggleClass( 'dashicons-plus dashicons-minus' );
	jQuery( this ).closest( '.wpeo-task-point-use-toggle' ).find( '.points.completed' ).toggleClass( 'hidden' );
};

window.eoxiaJS.taskManagerFrontend.point.setPointActive = function( event ) {
	jQuery( '.point-content.active' ).removeClass( 'active' );
	jQuery( this ).addClass( 'active' );
};

window.eoxiaJS.taskManagerFrontend.frontendSupport = {};

window.eoxiaJS.taskManagerFrontend.frontendSupport.init = function() {
	window.eoxiaJS.taskManagerFrontend.frontendSupport.event();
};

window.eoxiaJS.taskManagerFrontend.frontendSupport.event = function() {
	jQuery( document ).on( 'click', '.wpeo-ask-task', window.eoxiaJS.taskManagerFrontend.frontendSupport.slideAskTask );
	jQuery( document ).on( 'keyup', '.wps-section-content .task-search', window.eoxiaJS.taskManagerFrontend.frontendSupport.searchKey );
	jQuery( document ).on( 'click', '.wps-section-content .search-button', window.eoxiaJS.taskManagerFrontend.frontendSupport.searchIn );
	jQuery( document ).on( 'click', '.wps-section-content .button.blue', window.eoxiaJS.taskManagerFrontend.frontendSupport.closePopup );
	jQuery( document ).on( 'keydown', '.wps-section-content .popup input', window.eoxiaJS.taskManagerFrontend.frontendSupport.preventDefaultForm );
};

window.eoxiaJS.taskManagerFrontend.frontendSupport.slideAskTask = function( event ) {
	event.preventDefault();
	jQuery( '#wpeo-window-ask-task' ).slideToggle();
};

window.eoxiaJS.taskManagerFrontend.frontendSupport.searchKey = function( event ) {
	if ( 13 === event.keyCode ) {
		jQuery( '.wps-section-content .search-button' ).click();
	}
};

window.eoxiaJS.taskManagerFrontend.frontendSupport.searchIn = function( event ) {
	var element = jQuery( this );
	if ( 0 == jQuery( this ).closest( '.wps-section-content' ).find( '.task-search' ).val().length ) {
		jQuery( '.list-task .wpeo-project-task' ).show();
	} else {
		jQuery( '.list-task .wpeo-project-task:visible' ).each( function() {
			var synthesis_task = '';
			synthesis_task += jQuery( this ).text();
			jQuery( this ).find( 'input' ).each( function() {
				synthesis_task += jQuery( this ).val() + ' ';
			} );
			synthesis_task = synthesis_task.replace( /\s+\s/g, ' ' ).trim();

			if ( synthesis_task.search( new RegExp( jQuery( element ).closest( '.wps-section-content' ).find( '.task-search' ).val(), 'i' ) ) == -1 ) {
				jQuery( this ).hide();
			}
		} );
	}
};

window.eoxiaJS.taskManagerFrontend.frontendSupport.createdTicket = function( triggeredElement, response ) {
	if ( response.data.edit ) {
		jQuery( '.wpeo-project-task[data-id="' + response.data.task_id + '"]' ).replaceWith( response.data.task_view );
	} else {
		jQuery( '.list-task' ).prepend( response.data.task_view );
	}

	jQuery( '.wpeo-modal .modal-container .modal-content' ).html( response.data.success_view );
};

/**
 * Le callback en cas de réussite à la requête Ajax "open_popup_create_ticket".
 *
 * @param  {HTMLDivElement} triggeredElement  L'élement HTML déclenchant la requête Ajax.
 * @param  {Object}         response          Les données renvoyées par la requête Ajax.
 * @return {void}
 *
 * @since 1.2.0
 * @version 1.2.0
 */
window.eoxiaJS.taskManagerFrontend.frontendSupport.openedPopupCreateTicket = function( triggeredElement, response ) {
	jQuery( '.wpeo-project-wrap .popup .container.loading' ).removeClass( 'loading' );
	jQuery( '.wpeo-project-wrap .popup .container .content' ).html( response.data.view );
};

/**
 * Fermes la popup
 *
 * @since 1.2.0
 * @version 1.2.0
 *
 * @return {void}
 */
window.eoxiaJS.taskManagerFrontend.frontendSupport.closePopup = function() {
	jQuery( '.wpeo-project-wrap .popup.active' ).removeClass( 'active' );
};

/**
 * Empèches l'évènement de la touche 'entrer' dans le formulaire de la popup pour faire une demande.
 *
 * @since 1.2.0
 * @version 1.2.0
 *
 * @param  {KeyEvent} event L'état du clavier.
 * @return {void}
 */
window.eoxiaJS.taskManagerFrontend.frontendSupport.preventDefaultForm = function( event ) {
	if ( 13 === event.keyCode ) {
		event.preventDefault();
	}

	if ( event.ctrlKey && 13 === event.keyCode ) {
		jQuery( this ).closest( '.popup' ).find( '.action-input' ).click();
	}
};

/**
 * Les dernières activitéés faites sur le support.
 *
 * @since 1.2.0
 * @version 1.2.0
 *
 * @param  {SpanElement} triggeredElement L'élément déclenchant la requête Ajax.
 * @param  {Object} response              les données renvoyées par la requêtes Ajax.
 * @return {[type]}
 */
window.eoxiaJS.taskManagerFrontend.frontendSupport.loadedLastActivity = function( triggeredElement, response ) {
	jQuery( '.wps-section-content .popup .content' ).html( response.data.view );
	jQuery( '.wps-section-content .popup .container' ).removeClass( 'loading' );
	jQuery( '.wps-section-content .popup .title' ).html( response.data.title_popup );
	jQuery( '.wps-section-content .popup .load-more-history' ).show();
	jQuery( '.wps-section-content .popup .offset-event' ).val( response.data.offset );
	jQuery( '.wps-section-content .popup .last-date' ).val( response.data.last_date );
};